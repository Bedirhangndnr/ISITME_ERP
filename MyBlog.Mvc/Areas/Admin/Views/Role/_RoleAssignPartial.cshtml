@using MyBlog.Mvc.Consts;
@model MyBlog.Entities.Dtos.UserDtos.UserRoleAssignDto
@{
    //var allowedModuleNames = Model.Modules.Select(m => m.Name).ToArray();
    //var allowedProgramNames = new string[0];
    //var allowedSubProgramNames = new string[0];
    //var roleId = 0;
    //var roleDefinition = "";
    //var roleName = "";
    var accessLevelController = 0;
}

<div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><span class="fas fa-user-shield"></span> @Model.UserName Kullanıcısına Rol Atanıyor...</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="İptal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-block" data-dismiss="modal"><span class="fas fa-times"></span> İptal</button>
                    <button type="button" class="btn btn-primary btn-block" id="btnAssign"><span class="fas fa-save"></span> Kaydet-Ata</button>
                </div>
                <form asp-action="Assign" id="form-role-assign">

                    <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
                    <div asp-validation-summary="All" class="text-danger" id="validation-summary" aria-hidden="true" style="display: none;"></div>
                    <input type="hidden" asp-for="@Model.UserId" value="@Model.UserId" />
                    <input type="hidden" asp-for="@Model.UserName" value="@Model.UserName" />

                    <div class="form-row">
                        @{
                            var i = 0;
                            var roleGroups = Model.RoleAssignDtos.GroupBy(r => r.RoleName.Split(".")[0].ToLower());
                            var roleNames = Model.RoleAssignDtos.GroupBy(r => r.RoleDefinition.Split(" ")[0].ToLower());
                            var roleIds = Model.RoleAssignDtos.GroupBy(r => r.RoleId);
                            bool moduleControl = true;
                            bool programControl = true;
                        }

                        @foreach (var roleGroup in roleGroups)
                        {
                            var roleName = roleNames.FirstOrDefault(r => r.Key.ToLower() == roleGroup.Key)?.First()?.RoleDefinition;
                            roleName ??= roleGroup.Key.ToUpper();

                            if (roleName.Contains("PROGRAM") && programControl == true)
                            {
                                programControl = false;
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> Program Yetkileri</h6>
                                </div>
                            }
                            else if (roleName.Contains("MODULE") && moduleControl == true)
                            {
                                moduleControl = false;
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> Modül Yetkileri</h6>
                                </div>
                            }
                            else if (!roleName.Contains("PROGRAM") && !roleName.Contains("MODULE"))
                            {
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> @roleName Yetkileri</h6>
                                </div>
                            }

                            @foreach (var role in roleGroup)
                            {
                                <div class="form-group col-md-3">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" asp-for="@Model.RoleAssignDtos[i].HasRole" />
                                        <label asp-for="@Model.RoleAssignDtos[i].RoleId">@role.RoleDefinition</label>
                                        <input type="hidden" asp-for="@Model.RoleAssignDtos[i].RoleId" />
                                        <input type="hidden" asp-for="@Model.RoleAssignDtos[i].RoleName" />
                                        <input type="hidden" asp-for="@Model.RoleAssignDtos[i].RoleDefinition" />
                                        <input type="hidden" asp-for="@Model.RoleAssignDtos[i].AccessLevel" />
                                    </div>
                                </div>
                                i++;
                            }
                        }

@*
                        @foreach (var roleGroup in roleGroups)
                        {
                            var roleName = roleNames.FirstOrDefault(r => r.Key.ToLower() == roleGroup.Key)?.First()?.RoleDefinition;
                            roleName ??= roleGroup.Key.ToUpper();

                            if (roleName.Contains("PROGRAM") && programControl == true)
                            {
                                programControl = false;
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> Program Yetkileri</h6>
                                </div>
                            }
                            else if (roleName.Contains("MODULE") && moduleControl == true)
                            {
                                moduleControl = false;
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> Modül Yetkileri</h6>
                                </div>
                            }
                            else if (!roleName.Contains("PROGRAM") && !roleName.Contains("MODULE"))
                            {
                                <div class="form-group col-md-12">
                                    <h6 class="text-center"><span class="fas fa-th-list"></span> @roleName Yetkileri</h6>
                                </div>
                            }


                            @foreach (var role in roleGroup)
                            {
                                <div class="form-group col-md-3">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" asp-for="@role.HasRole" />
                                        <label asp-for="@role.RoleId">@role.RoleDefinition</label>
                                        <input type="hidden" asp-for="@role.RoleId" />
                                        <input type="hidden" asp-for="@role.RoleName" />
                                        <input type="hidden" asp-for="@role.RoleDefinition" />
                                        <input type="hidden" asp-for="@role.AccessLevel" />
                                        <input type="hidden" asp-for="@Model.UserName" />
                                    </div>
                                </div>
                            }

                        }*@

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger btn-block" data-dismiss="modal"><span class="fas fa-times"></span> İptal</button>
                <button type="button" class="btn btn-primary btn-block" id="btnAssign"><span class="fas fa-save"></span> Kaydet-Ata</button>
            </div>
        </div>
    </div>
</div>

<script>

</script>