@using MyBlog.Mvc.Areas.Admin.Models.SingleModels;
@model MyBlog.Mvc.Areas.Admin.Models.OutPaymentAddViewModel

@{
    ViewData["Title"] = "Add";
    Layout = "_Layout";
}

@await Component.InvokeAsync("BreadCrumbs", new BreadCrumbsViewModel
{
        Depth = 3,
        Controller = "OutPayment",
        Action = "Add",
        ActionTR = "Ekle",
        TableType = ViewBag.TableType

})

<form asp-controller="OutPayment" asp-action="Add" method="post" enctype="multipart/form-data">
    <div class="row mt-2">
        <div class="col-md-5">
            <div class="card">
                <div class="card-body">
                    <input type="hidden" asp-for="CreatedByName" value="@Model.CreatedByName" />

                    <div class="form-group">
                        <div class="col-md-12">
                            <label>Toplam Borç</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">TL</span>
                                </div>
                                <input type="text" id="currentDebt" class="form-control" placeholder="Güncel Borç" readonly asp-for="DebtAmount" value="@Model.DebtAmount"/>
                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#updateDebtModal">Değiştir</button>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12">
                            <label>Ödenecek Tutar</label>
                            <span asp-validation-for="AmountPaid" class="text-danger"></span>

                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">TL</span>
                                </div>
                                <input type="number" id="paymentAmount" class="form-control" placeholder="Ödenecek Tutar" readonly oninput="  checkPaymentAmount()" asp-for="AmountPaid" />

                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="button" onclick="payFullAmount()">Tümünü Öde</button>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12">
                            <label>Kalan Tutar</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">TL</span>
                                </div>
                                <input type="number" id="remainingAmount" class="form-control" placeholder="Kalan Tutar" readonly />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-group">
                            @await Component.InvokeAsync("UpdatePageButtons", new UpdatePageButtonsModel
                            {
                            Id=0,
                            InMainPage=1,
                            TableType=ViewBag.tableType,
                            Action="Update",
                            Controller="OutPayment"
                            })
                        </div>
                    </div>
                    <span asp-validation-for="AmountPaid" class="text-danger"></span>
                    <span asp-validation-for="PaidPlace" class="text-danger"></span>
                    <span asp-validation-for="DueDate" class="text-danger"></span>
                    <span asp-validation-for="DebtAmount" class="text-danger"></span>
                    <span asp-validation-for="IsPaid" class="text-danger"></span>

                </div>
            </div>
        </div>
        <div class="col-md-7">
            <div class="card">
                <div class="card-header">
                    Detaylar
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="col-md-12">
                            <textarea id="text-editor" class="form-control" asp-for="Description" placeholder="Açıklama.."></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="datepicker" asp-for="DueDate"></label>
                        <input type="text" id="datetimepicker" class="form-control" value="@DateTime.Now.ToShortDateString()" asp-for="DueDate" />
                    </div>
                    <div class="form-group">
                        <label asp-for="PaidPlace"></label>
                        <input type="text" class="form-control" asp-for="PaidPlace" />
                    </div>


                    <!-- Güncel Borç Değiştir Modal -->
                    <div class="modal fade" id="updateDebtModal" tabindex="-1" role="dialog" aria-labelledby="updateDebtModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="updateDebtModalLabel">Güncel Borç Değiştir</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <input type="number" id="newDebtAmount" class="form-control" placeholder="Yeni Borç Tutarı" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">İptal</button>
                                    <button type="button" class="btn btn-primary" onclick="updateDebt()">Kaydet</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>




















@section Scripts
    {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/trumbowyg.min.js" integrity="sha512-sffB9/tXFFTwradcJHhojkhmrCj0hWeaz8M05Aaap5/vlYBfLx5Y7woKi6y0NrqVNgben6OIANTGGlojPTQGEw==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/langs/tr.min.js" integrity="sha512-+HGzdrYvtA0U9cp5kJad8OpjTvUi6ywZ9z9kXFGiV3EaAR1II5X6lfulUm6/F9GKesHW+jHFfAqwXK0juybvMw==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/colors/trumbowyg.colors.min.js" integrity="sha512-iT7g30i1//3OBZsfoc5XmlULnKQKyxir582Z9fIFWI6+ohfrTdns118QYhCTt0d09aRGcE7IRvCFjw2wngaqRQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/emoji/trumbowyg.emoji.min.js" integrity="sha512-C1y8Ma4rukPZAgoB+9AWiKNMWXvWXGDygpcYuL/lM3YKUcZLUgFwF8brKYML73a5YeZ4y7hmY3604Tzx4f4k0Q==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/fontfamily/trumbowyg.fontfamily.min.js" integrity="sha512-tDDpWlhruXFSzPin7PeSOo/ZklJv354ZUibgoTnthgO9lQUiNn4etCFGNwT4c3WUCZ1jWZgOVrXGMqiApe9sBg==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/fontsize/trumbowyg.fontsize.min.js" integrity="sha512-DOJaq3OCe5hLSr73aQBMiJY4kc+L5UwessOl6g2oxyy7VDnZVWt+TgWVy2nh2ypf7bwoaxZmPnIMiRC5PNZecA==" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" integrity="sha512-uto9mlQzrs59VwILcLiRYeLKPPbS/bT71da/OEBYEwcdNUk8jYIy+D176RYoop1Da+f9mvkYrmj5MCLZWEtQuA==" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/tr.js"></script>

    <script src="~/AdminArea/js/toolsScripts/select2.js" type="application/ecmascript"></script>
    <script src="~/AdminArea/js/outPaymentScripts/outPaymentAddIndex.js" type="application/ecmascript"></script>
    <script src="~/AdminArea/js/outPaymentScripts/outPaymentDetailIndex.js" type="application/ecmascript"></script>


}
@section Styles
    {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/ui/trumbowyg.min.css" integrity="sha512-iw/TO6rC/bRmSOiXlanoUCVdNrnJBCOufp2s3vhTPyP1Z0CtTSBNbEd5wIo8VJanpONGJSyPOZ5ZRjZ/ojmc7g==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/colors/ui/trumbowyg.colors.min.css" integrity="sha512-8dXb2ITE13jLrqqGDVTU8kKl9vHZI9E4TpZGyfhevHeF+/cWWA17wVj+SKX3+QHqZISiGihaCOyK3nA152ShDg==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.23.0/plugins/emoji/ui/trumbowyg.emoji.min.css" integrity="sha512-T2q2UM7Pm3t6Fu0VTRcuVMuaQf3/wP1aFi+/NyvpoVV0VBxN1Pqlmq57Jfg1IPRQCfFQOPLKBwoXA28+1gd/Ow==" crossorigin="anonymous" />
    <link href="https://cdn.jsdelivr.net/npm/select2@@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/cupertino/jquery-ui.min.css" integrity="sha512-ug/p2fTnYRx/TfVgL8ejTWolaq93X+48/FLS9fKf7AiazbxHkSEENdzWkOxbjJO/X1grUPt9ERfBt21iLh2dxg==" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/cupertino/theme.min.css" integrity="sha512-adRIgePtMQgAVB+Mfkhl+Nyva/WllWlFzJyyhYCjznU3Di+Z4SsYi1Rqsep11PYLpUsW/SjE4NXUkIjabQJCOQ==" crossorigin="anonymous" />
    <link href="~/AdminArea/css/select2-bootstrap4.min.css" rel="stylesheet" />

}


<script>
    // Sayfa yüklendiğinde çalışacak olan kodlar
    window.onload = function () {
        updateCurrentDebt(); // Güncel borç değerini getir
        calculateRemainingAmount(); // Kalan tutarı hesapla
    }
    function checkPaymentAmount() {
        var paymentAmountInput = document.getElementById("paymentAmount");
        var paymentAmount = parseFloat(paymentAmountInput.value.replace(/,/g, ''));

        var currentDebt = parseFloat(document.getElementById("currentDebt").value.replace(/,/g, ''));

        if (paymentAmount > currentDebt) {
            Swal.fire({
                title: 'Toplam borcu aşan bir ödeme yapamazsınız.',
                text: 'Lütfen ödenecek tutarı düzeltin.',
                icon: 'warning',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Tamam',
                showCancelButton: true,
                cancelButtonText: 'Tümünü Öde',
                cancelButtonColor: '#d33',
            }).then((result) => {
                if (result.dismiss === Swal.DismissReason.cancel) {
                    payFullAmount();
                }
            });
            // paymentAmount'in en sağındaki rakamı silmek için aşağıdaki kodu ekleyin
            paymentAmountInput.value = paymentAmountInput.value.slice(0, -1);
        }
        else {
            calculateRemainingAmount();
        }
    }
    function checkPaymentAmountFromDetail() {
        var paymentAmountInput = document.getElementById("paymentAmountDetail");
        var paymentAmount = parseFloat(paymentAmountInput.value.replace(/,/g, ''));

        var currentDebt = parseFloat(document.getElementById("currentDebt").value.replace(/,/g, ''));

        if (paymentAmount > currentDebt) {
            Swal.fire({
                title: 'Toplam borcu aşan bir ödeme yapamazsınız.',
                text: 'Lütfen ödenecek tutarı düzeltin.',
                icon: 'warning',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Tamam',
                showCancelButton: true,
                cancelButtonText: 'Tümünü Öde',
                cancelButtonColor: '#d33',
            }).then((result) => {
                if (result.dismiss === Swal.DismissReason.cancel) {
                    payFullAmount();
                }
            });
            // paymentAmount'in en sağındaki rakamı silmek için aşağıdaki kodu ekleyin
            paymentAmountInput.value = paymentAmountInput.value.slice(0, -1);
        }
        else {
            calculateRemainingAmount();
        }
    }


    window.onload = function () {
        updateCurrentDebt(); // Güncel borç değerini getir
        calculateRemainingAmount(); // Kalan tutarı hesapla
    }

    function updateCurrentDebt() {
        // AJAX veya diğer yöntemlerle güncel borç değerini al
        var currentDebt = 5000; // Örnek olarak 5000 TL olarak varsayalım
        document.getElementById("currentDebt").value = currentDebt;
    }

    function calculateRemainingAmount() {
        var paymentAmount = parseFloat(document.getElementById("paymentAmount").value.replace(",", ""));
        var currentDebt = parseFloat(document.getElementById("currentDebt").value.replace(",", ""));
        var remainingAmount = currentDebt - paymentAmount;
        document.getElementById("remainingAmount").value = remainingAmount;
    }


    function formatNumber(number) {
        var formattedNumber = number.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        return formattedNumber;
    }


    function payFullAmount() {
        var currentDebt = parseFloat(document.getElementById("currentDebt").value.replace(",", ""));
        document.getElementById("paymentAmount").value = currentDebt.toFixed(2);
        calculateRemainingAmount();
    }


    function updateValuesAmount() {
        var currentDebt = parseAmountValue("currentDebt");
        var paymentAmount = parseAmountValue("paymentAmount");
        calculateRemainingAmount();
    }

    function updateDebt() {
        var newDebtAmountInput = document.getElementById("newDebtAmount");
        var newDebtAmount = parseFloat(newDebtAmountInput.value.replace(/[^0-9.]/g, ''));
        if (!isNaN(newDebtAmount)) {
            document.getElementById("currentDebt").value = formatNumber(newDebtAmount);
            calculateRemainingAmount();
            $('#updateDebtModal').modal('hide');
        } else {
            // Hatalı giriş durumunda kullanıcıya uyarı verilebilir
            toastr.error("Lütfen geçerli bir borç tutarı girin.");
        }
        newDebtAmountInput.value = ''; // Inputu temizle
    }
</script>
