@using MyBlog.Mvc.Areas.Admin.Models.SingleModels;
@using MyBlog.Shared.Utilities.Results.ComplexTypes;
@model MyBlog.Entities.Dtos.AppointmentDtos.AppointmentListDto;
@{
    Layout = "_Layout";
    ViewBag.Title = "Ürünler";
}

@await Component.InvokeAsync("BreadCrumbs", new BreadCrumbsViewModel
{
        Depth = 2,
        Controller = "Appointment",
    ControllerTr = "Randevular",
        Action = "Yok",
        ActionTR = "Yok",
        TableType = ViewBag.TableType
})
@if (Model.ResultStatus == ResultStatus.Success)
{
    <input type="hidden" id="tableType" value="@ViewBag.TableType" />
    <div id="modalPlaceHolder" aria-hidden="true"></div> @*id verme sebebimiz, divi seçip divin içine partial view verecek olmamısz*@
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Randevular
        </div>
        <div class="card-body">
            <div class="spinner-border" role="status" style="display: none;">
                <span class="sr-only">Yükleniyor...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="appointmentsTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Tarih</th>
                            <th style="display:none;">Saat</th>
                            <th>Saat</th>
                            <th>Hasta Adı Soyadı</th>
                            <th>Personel Adı</th>
                            <th>Randevu Tipi</th>
                            <th>Açıklama</th>
                            <th>Yapıldı Mı</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Tarih</th>
                            <th style="display:none;">Saat</th>
                            <th>Saat</th>
                            <th>Hasta Adı Soyadı</th>
                            <th>Personel Adı</th>
                            <th>Randevu Tipi</th>
                            <th>Açıklama</th>
                            <th>Yapıldı Mı</th>
                            <th>İşlemler</th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var appointment in Model.AppointmentListWithRelatedTables)
                        {
                            var today = DateTime.Today;
                            var yesterday = today.AddDays(-1);
                            var tomorrow = today.AddDays(1);

                            string displayDate;

                            if (appointment.Date.Date == today)
                            {
                                displayDate = "Bugün";
                            }
                            else if (appointment.Date.Date == tomorrow)
                            {
                                displayDate = "Yarın";
                            }
                            else if (appointment.Date.Date == yesterday)
                            {
                                displayDate = "Dün";
                            }
                            else
                            {
                                displayDate = appointment.Date.ToShortDateString();
                            }
                        
                            <tr name="@appointment.Id">
                                <td>@displayDate</td>
                                <td style="display:none;">@appointment.Date</td>
                                <td>@appointment.Date.TimeOfDay.ToString("hh\\:mm") </td>
                                <td>@appointment.CustomerName</td>
                                <td>@appointment.EmployeeName</td>                                
                                <td>@appointment.AppointmentTypeTitle</td>
                                <td>@appointment.Description</td>
                                <!-- Diğer hücreler -->
                                <td class="checkbox-cell" name="@appointment.Id">
                                    <label class="toggle-switch">
                                        <input id="checkBox" type="checkbox" class="appointment-checkbox"
                                               data-appointment-id="@appointment.Id"
                                            @(appointment.IsMade ? "checked" : "")>
                                        <span class="slider round"></span>
                                    </label>
                                </td>
                                <!-- Diğer hücreler -->
                                <td>
                                    @await Component.InvokeAsync("UpdatePageButtons", new UpdatePageButtonsModel
                                        {
                                        Id=appointment.Id,
                                        InMainPage=0,
                                        TableType=ViewBag.tableType,
                                        Action="Update",
                                        Controller="Appointment"
                                        })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (Model.ResultStatus == ResultStatus.Error)
{
    <div class="alert alert-danger mt-3">
        @Model.Message <br />
        Dashboard sayfasına geri dönmek için lütfen <a class="alert-link" asp-area="Admin" asp-controller="Customer" asp-action="Index">tıklayınız.</a>
    </div>
}
<link href="~/AdminArea/css/dtPaginationCss.css" rel="stylesheet" />
@section Scripts
{

    <script src="~/AdminArea/js/appointmentScripts/appointmentIndex.js" type="application/ecmascript"></script>
    <script>
        $(document).ready(function () {
            $('#btnAdd').click(function () {
                // ViewBag.TableType değişkeninin değerini burada alıyoruz
                var tableType = '@ViewBag.TableType';
                // Add action'ına tableType parametresini yollamak için, Url.Action fonksiyonunun
                // ikinci parametresine ekleyebilirsiniz
                window.location.href = '@Url.Action("Add", "Appointment")' + '?tableType=' + encodeURIComponent(tableType);
            });
            $('#date').click(function () {
                this.visible = false;
            });
            $('.appointment-checkbox').click(function () {
                var appointmentId = $(this).data('appointment-id');
                // var appointmentId = checkbox.dataset.appointmentId;
                var isMade = this.checked;

                // AJAX isteği ile server'a bilgi gönderme
                $.ajax({
                    url: '/Admin/Appointment/UpdateAppointmentStatus',
                    type: 'POST',
                    data: {
                        appointmentId: appointmentId,
                        isMade: isMade
                    },
                    success: function (response) {
                        // Başarılı güncelleme sonrası eylemler
                    },
                    error: function (error) {
                        // Hata durumunda yapılacak işlemler
                    }
                });
            });
            function updateAppointmentStatus(checkbox) {
                var appointmentId = checkbox.dataset.appointmentId;
                var isMade = checkbox.checked;

                // AJAX isteği ile server'a bilgi gönderme
                $.ajax({
                    url: '/Admin/Appointment/UpdateAppointmentStatus',
                    type: 'POST',
                    data: {
                        appointmentId: appointmentId,
                        isMade: isMade
                    },
                    success: function (response) {
                        // Başarılı güncelleme sonrası eylemler
                    },
                    error: function (error) {
                        // Hata durumunda yapılacak işlemler
                    }
                });
            }
        });


    </script>
    <style>
        .checkbox-cell {
            text-align: center;
            vertical-align: middle;
            padding: 0;
        }

        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .toggle-switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                transition: .4s;
                border-radius: 50%;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        /* Estetik amaçlı ekstra stiller */
        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }

    </style>
}
