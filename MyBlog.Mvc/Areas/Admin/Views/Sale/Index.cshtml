@using Microsoft.AspNetCore.Mvc.TagHelpers
@using MyBlog.Mvc.Areas.Admin.Models.SingleModels;
@using MyBlog.Mvc.Consts
@using MyBlog.Shared.Utilities.Results.ComplexTypes;
@model MyBlog.Entities.Dtos.SaleDtos.SaleListDto;
@{
    Layout = "_Layout";
    ViewBag.Title = ViewBag.customerName + " Satışlar";
    decimal totalSaleAmount = 0;
    decimal totalSaleCount = 0;
    var user = ViewBag.User;
    var roles = ViewBag.Roles;
}

@await Component.InvokeAsync("BreadCrumbs", new BreadCrumbsViewModel
{
        Depth = 2,
        Controller = "Sale",
        ControllerTr = "Satışlar",
        Action = "Yok",
        ActionTR = "Yok",
        TableType = ViewBag.TableType
})
@if (Model.ResultStatus == ResultStatus.Success)
{

    <input type="hidden" id="tableType" value="@ViewBag.TableType" />
    <div id="modalPlaceHolder" aria-hidden="true"></div> @*id verme sebebimiz, divi seçip divin içine partial view verecek olmamısz*@
    <div class="card mb-4 mt-2">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Satışlar
        </div>
        <div class="card-body">
            <div class="spinner-border" role="status" style="display: none;">
                <span class="sr-only">Yükleniyor...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="salesTable" width="100%" cellspacing="0">
                    <thead>
                    <tr>
                        <th>ID</th>
                            <th>Tarih</th>
                            <th>Satış Tarihi</th>
                        <th>İlgilenen</th>
                        <th>Hasta Adı Soyadı</th>
                        <th>Ürün</th>
                        <th>Satış Durumu</th>
                        <th>Satış/Kapora Tutarı</th>
                        <th>Sgk Türü</th>
                        <th>İşlem</th>
                    </tr>
                    </thead>
                    <tfoot>
                    <tr>
                        <th>ID</th>
                            <th>Tarih</th>
                            <th>Satış Tarihi</th>
                            <th>İlgilenen</th>
                        <th>Hasta Adı Soyadı</th>
                        <th>Ürün</th>
                        <th>Satış Durumu</th>
                        <th>Satış/Kapora Tutarı</th>
                        <th>Sgk Türü</th>
                        <th>İşlem</th>
                    </tr>
                    </tfoot>
                    <tbody>
                    @foreach (var sale in Model.SaleListWithRelatedTables)
                    {
                        <tr name="@sale.Id">
                                <td>@sale.Id</td>
                                <td>@sale.CreatedDate.ToShortDateString()</td>
                                <td>
                                    @(sale.DeliveryDate.HasValue ? sale.DeliveryDate.Value.ToShortDateString() : "Belirlenmemiş")
                                </td>
                                <td>@sale.EmployeeFirstName</td>
                                <td>@sale.CustomerFirstName</td>
                                <td>@sale.ProductName</td>
                                <td>@sale.SaleStatusName</td>
                                <td>
                                    @(sale.DownPayment.HasValue ? $"{sale.Amount} / {sale.DownPayment.Value}" : $"{sale.Amount} / Kapora Alınmamış")
                                </td>
                                <td>@sale.SgkTypeTitle</td>
                                <td>
                                    @await Component.InvokeAsync("UpdatePageButtons", new UpdatePageButtonsModel
                       {
                           Id = sale.Id,
                           InMainPage = 0,
                           TableType = ViewBag.tableType,
                           Action = "Update",
                           Controller = "Sale"
                       })
                                </td>
                        </tr>
                        totalSaleCount++;
                        totalSaleAmount += sale.Amount;
                    }
                    </tbody>
                </table>
            @if (ViewBag.Roles != null && ViewBag.Roles.Contains(AuthorizeDefinitionConstants.SuperAdmin))
            {
                <div class=" total-section col-md-10" style="position: fixed; bottom: 0; left: 0; right: 0;">
                    <div class="total-box green" style="display: inline-block;">
                        <div class="total-label">Toplam Satış Tutarı</div>
                        <div class="total-amount" id="totalIncome">@totalSaleAmount TL</div>
                    </div>
                    <div class="total-box red" style="display: inline-block;">
                        <div class="total-label">Toplam Satış Sayısı</div>
                        <div class="total-amount" id="totalsale">@totalSaleCount</div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>
}
@if (Model.ResultStatus == ResultStatus.Error)
{
    <div class="alert alert-danger mt-3">
        @Model.Message <br />
        Dashboard sayfasına geri dönmek için lütfen <a class="alert-link" asp-area="Admin" asp-controller="Customer" asp-action="Index">tıklayınız.</a>
    </div>
}
<link href="~/AdminArea/css/dtPaginationCss.css" rel="stylesheet" />

@section Scripts
    {
    <script src="~/AdminArea/js/saleIndex.js" type="application/ecmascript"></script>
    @*<script>
        window.onscroll = function () { myFunction() };

        var navbar = document.getElementById("navbar");
        var sticky = navbar.offsetTop;

        function myFunction() {
            if (window.pageYOffset >= sticky) {
                navbar.classList.add("sticky")
            } else {
                navbar.classList.remove("sticky");
            }
        }
    </script>*@
    <script>
        $(document).ready(function () {
            $('#btnAdd').click(function () {
                // ViewBag.TableType değişkeninin değerini burada alıyoruz
                var tableType = '@ViewBag.TableType';
                // Add action'ına tableType parametresini yollamak için, Url.Action fonksiyonunun
                // ikinci parametresine ekleyebilirsiniz
                window.location.href = '@Url.Action("Add", "Sale")' + '?tableType=' + encodeURIComponent(tableType);
            });
        });
    </script>
}
